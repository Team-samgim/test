name: Create Jira issue
on:
  issues:
    types: [opened]

jobs:
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - uses: actions/checkout@v4
        with: { ref: main }

      - id: issue-parser
        uses: stefanbuck/github-issue-parser@v3
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Guard - parentKey required
        if: ${{ steps.issue-parser.outputs.issueparser_parentKey == '' }}
        run: |
          echo "⚠️ No parent key provided. Exiting."
          exit 0

      - id: get-parent-type
        run: |
          PARENT_KEY="${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          
          RESPONSE=$(curl -s -X GET \
            -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
            -H "Content-Type: application/json" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${PARENT_KEY}")
          
          ISSUE_TYPE=$(echo "$RESPONSE" | python3 -c "import sys, json; print(json.load(sys.stdin)['fields']['issuetype']['name'])")
          echo "parent_issue_type=${ISSUE_TYPE}" >> $GITHUB_OUTPUT
          echo "Parent issue type: ${ISSUE_TYPE}"

      - id: md2jira
        uses: peter-evans/jira2md@v1
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      # Epic 아래에 Task 생성
      - id: create-task
        if: ${{ steps.get-parent-type.outputs.parent_issue_type == 'Epic' }}
        uses: atlassian/gajira-create@v3
        with:
          project: SGK
          issuetype: Task
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      # Task 아래에 Sub-task 생성
      - id: create-subtask
        if: ${{ steps.get-parent-type.outputs.parent_issue_type == 'Task' }}
        uses: atlassian/gajira-create@v3
        with:
          project: SGK
          issuetype: Sub-task
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - uses: actions/checkout@v4
        if: ${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}
        with: { ref: dev }

      - name: Create branch
        if: ${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}
        run: |
          ISSUE="${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}"
          TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}"
          BRANCH="${ISSUE}-$(echo "$TITLE" | sed 's/ /-/g')"
          git checkout -b "$BRANCH"
          git push origin "$BRANCH"

      - name: Update GitHub issue
        if: ${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Add comment
        if: ${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Jira Issue: [${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }})'
