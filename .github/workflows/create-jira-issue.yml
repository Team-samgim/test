name: Create Jira issue
on:
  issues:
    types:
      - opened

jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo "parentKey: ${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          echo "ticket number: ${{ steps.issue-parser.outputs.__ticket_number }}"
          echo "json: ${{ steps.issue-parser.outputs.jsonString }}"

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Get Parent Issue Type
        id: get-parent-type
        if: ${{ steps.issue-parser.outputs.issueparser_parentKey != '' }}
        run: |
          PARENT_KEY="${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          
          RESPONSE=$(curl -s -X GET \
            -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
            -H "Content-Type: application/json" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${PARENT_KEY}")
          
          ISSUE_TYPE=$(echo $RESPONSE | jq -r '.fields.issuetype.name')
          echo "parent_issue_type=${ISSUE_TYPE}" >> $GITHUB_OUTPUT
          echo "Parent issue type is: ${ISSUE_TYPE}"

      - name: Create Task under Epic
        id: create-epic
        if: ${{ steps.get-parent-type.outputs.parent_issue_type == 'Epic' }}
        uses: atlassian/gajira-create@v3
        with:
          project: SGK
          issuetype: Task
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "customfield_10014": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
            }

      - name: Create Sub-task under Task
        id: create-subtask
        if: ${{ steps.get-parent-type.outputs.parent_issue_type == 'Task' }}
        uses: atlassian/gajira-create@v3
        with:
          project: SGK
          issuetype: Sub-task
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: |
          echo "Epic issue: ${{ steps.create-epic.outputs.issue }}"
          echo "Subtask issue: ${{ steps.create-subtask.outputs.issue }}"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Create branch with Ticket number
        run: |
          ISSUE_NUMBER="${{ steps.create-epic.outputs.issue }}"
          if [ -z "$ISSUE_NUMBER" ]; then
            ISSUE_NUMBER="${{ steps.create-subtask.outputs.issue }}"
          fi

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "No Jira issue created (parent type was neither Epic nor Task). Exiting."
            exit 0
          fi

          ISSUE_TITLE="${{ steps.issue-parser.outputs.issueparser_branch }}"
          BRANCH_NAME="${ISSUE_NUMBER}-$(echo ${ISSUE_TITLE} | sed 's/ /-/g')"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"

      - name: Update issue title
        if: ${{ steps.create-epic.outputs.issue || steps.create-subtask.outputs.issue }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create-epic.outputs.issue || steps.create-subtask.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Add comment with Jira issue link
        if: ${{ steps.create-epic.outputs.issue || steps.create-subtask.outputs.issue }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Jira Issue Created: [${{ steps.create-epic.outputs.issue || steps.create-subtask.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create-epic.outputs.issue || steps.create-subtask.outputs.issue }})
